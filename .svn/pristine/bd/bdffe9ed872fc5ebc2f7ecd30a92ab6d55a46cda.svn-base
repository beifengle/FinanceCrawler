package com.yysoft.data.handle;

import java.io.BufferedReader;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashSet;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.yysoft.dao.StockDAO;
import com.yysoft.entity.Stock;
import com.yysoft.entity.StockDividends;
import com.yysoft.util.ConfigParser;
import com.yysoft.util.Constant;
import com.yysoft.util.StringUtils;

/**
 * 功能描述：采集股息
 * 
 * @author bzl
 * @date:2015年11月06日
 * @time:下午15:19:56
 * @version:1.0
 */
public class PerShareReponse {
	private static Logger logger = LogManager.getLogger("fcDividendLoger"); // 记录日志

	/**
	 * 功能描述：金融界返回数据解析
	 * 
	 * @author bxsun
	 * @date:2016年4月7日
	 * @time:上午9:19:56
	 * @version:1.0 url:http://stock.jrj.com.cn/report/js/fh/2015-12-31.js?ts=
	 *              1459914357784
	 */

	public static ArrayList<StockDividends> ParseSheetDividend(BufferedReader br, String year) {
		ArrayList<StockDividends> dividends = new ArrayList<StockDividends>();
		try {
			StringBuffer abc = new StringBuffer();
			ArrayList list = new ArrayList();
			String jsonContent;
			while ((jsonContent = br.readLine()) != null) {
				list.add(jsonContent);
			}
			// System.out.println(list.size());
			for (int i = 0; i < list.size(); i++) {
				abc.append(list.get(i));
			}
			String line;
			line = StringUtils.getStrByReg("data:(.*?)]};", abc.toString());
			String[] ss = line.split("]");
			String[] ss2 = null;
			StringBuffer ss3 = new StringBuffer();
			for (int i = 0; i < ss.length; i++) {
				String ss1 = ss[i].replace("[", "");
				// System.out.println(ss1);
				ss2 = ss1.split(",");
				for (int j = 0; j < ss2.length; j++) {
					if (ss2[j].equals("")) {
						ss2[j] = "0";
					}
					// System.out.println(ss2[j]);
					ss3.append(ss2[j]);
				}
			}
			String last = ss3.toString();
			String[] all = last.split("'");
			int count=1;
			for (int i = 0; i <= all.length - 1; i += 16) {
				DecimalFormat df = new DecimalFormat("######0.0000");
				DecimalFormat df1 = new DecimalFormat("######0.00");
				StockDividends div = new StockDividends();
				div.setYear(Integer.parseInt(year.substring(0, 4)));
				String code = "";
				code = all[i + 1];
				if (code.indexOf('0') == 0 || code.indexOf('3') == 0) {
					code = "sz" + code;
				}
				if (code.indexOf('6') == 0) {
					code = "sh" + code;
				}
				div.setCode(code);
				String executeContent = all[i + 5];
				div.setDividendPlan(executeContent);

				String reportDay = "";
				reportDay = all[i + 7];
				div.setReportDate(reportDay);
				if (all[i + 7].equals("")) {
					div.setDividendPlanFlag(2);
				} else {
					div.setDividendPlanFlag(1);
				}
				div.setReportDate(reportDay);
				String announDate = "";
				announDate = all[i + 9];
				div.setAnnounDate(announDate);
				String value = "";
				double dividendPerShare = 0;
				double dividendPlanIncrease = 0;
				String a = all[i + 6].substring(1, 2);
				String d = all[i + 6];
				if (a.endsWith("0")) {
					if (d.substring(2, 6).substring(1, 2).endsWith(".")
							|| d.substring(2, 6).substring(2, 3).endsWith(".") && !d.substring(2, 3).endsWith("0")) {
						// 没有转增股,有分红,判断有没有送股,分红是否大于10
						if (d.substring(4, 5).contains(".")) {
							dividendPerShare = Double.parseDouble(d.substring(2, 7)) / 10;
							if (d.substring(7, 8).endsWith("0")) {
								dividendPlanIncrease = 0;
							} else {
								// 有送股,判断送股是否大于10
								if (d.substring(7, 9).contains(".")) {
									dividendPlanIncrease = Double.parseDouble(d.substring(7, 11));
								} else {
									dividendPlanIncrease = Double.parseDouble(d.substring(7, 12));
								}
							}
						} else {
							dividendPerShare = Double.parseDouble(d.substring(2, 6)) / 10;
							if (d.substring(6, 7).endsWith("0")) {
								dividendPlanIncrease = 0;
							} else {
								// 有送股,判断送股是否大于10
								if (d.substring(6, 8).contains(".")) {
									dividendPlanIncrease = Double.parseDouble(d.substring(6, 9));
								} else {
									dividendPlanIncrease = Double.parseDouble(d.substring(6, 10));
								}
							}
						}
					} else {
						dividendPerShare = 0;
						// 没有转增股,没有分红,判断有没有送股
						if (d.substring(3, 4).endsWith("0")) {
							dividendPlanIncrease = 0;
						} else {
							// 有送股,判断送股是否大于10
							if (d.substring(3, 5).contains(".")) {
								dividendPlanIncrease = Double.parseDouble(d.substring(3, 7));
							} else {
								dividendPlanIncrease = Double.parseDouble(d.substring(3, 8));
							}
						}
					}
				} else {
					if (Double.parseDouble(d.substring(1, 3)) >= 10) {
						if (d.substring(6, 10).substring(1, 2).endsWith(".")
								|| d.substring(6, 10).substring(2, 3).endsWith(".")
										&& !d.substring(6, 7).endsWith("0")) {
							// 有转增股,有分红,判断有没有送股,分红是否大于10
							if (d.substring(8, 9).contains(".")) {
								dividendPerShare = Double.parseDouble(d.substring(6, 11)) / 10;
								if (d.substring(11, 12).endsWith("0")) {
									dividendPlanIncrease += Double.parseDouble(d.substring(1, 5));
								} else {
									// 有送股,判断送股是否大于10
									if (d.substring(11, 13).contains(".")) {
										dividendPlanIncrease = Double.parseDouble(d.substring(11, 15))
												+ Double.parseDouble(d.substring(1, 5));
									} else {
										dividendPlanIncrease = Double.parseDouble(d.substring(11, 16))
												+ Double.parseDouble(d.substring(1, 5));
									}
								}
							} else {
								dividendPerShare = Double.parseDouble(d.substring(6, 10)) / 10;
								if (d.substring(10, 11).endsWith("0")) {
									dividendPlanIncrease += Double.parseDouble(d.substring(1, 5));
								} else {
									// 有送股,判断送股是否大于10
									if (d.substring(10, 12).contains(".")) {
										dividendPlanIncrease = Double.parseDouble(d.substring(10, 14))
												+ Double.parseDouble(d.substring(1, 5));
									} else {
										dividendPlanIncrease = Double.parseDouble(d.substring(10, 15))
												+ Double.parseDouble(d.substring(1, 5));
									}
								}
							}
						} else {
							dividendPerShare = 0;
							// 有转增股,没有分红,判断有没有送股
							if (d.substring(7, 8).endsWith("0")) {
								dividendPlanIncrease += Double.parseDouble(d.substring(1, 5));
							} else {
								// 有送股,判断送股是否大于10
								if (d.substring(7, 9).contains(".")) {
									dividendPlanIncrease = Double.parseDouble(d.substring(7, 11))
											+ Double.parseDouble(d.substring(1, 5));
								} else {
									dividendPlanIncrease = Double.parseDouble(d.substring(7, 12))
											+ Double.parseDouble(d.substring(1, 5));
								}
							}
						}
					} else {
						if (d.substring(5, 9).substring(1, 2).endsWith(".")
								|| d.substring(5, 9).substring(2, 3).endsWith(".")
										&& !d.substring(5, 6).endsWith("0")) {
							// 有转增股,有分红,判断有没有送股,分红是否大于10
							if (d.substring(7, 8).contains(".")) {
								dividendPerShare = Double.parseDouble(d.substring(5, 10)) / 10;
								if (d.substring(10, 11).endsWith("0")) {
									dividendPlanIncrease += Double.parseDouble(d.substring(1, 4));
								} else {
									// 有送股,判断送股是否大于10
									if (d.substring(10, 12).contains(".")) {
										dividendPlanIncrease = Double.parseDouble(d.substring(10, 14))
												+ Double.parseDouble(d.substring(1, 4));
									} else {
										dividendPlanIncrease = Double.parseDouble(d.substring(10, 15))
												+ Double.parseDouble(d.substring(1, 4));
									}
								}
								
							}else{
								dividendPerShare = Double.parseDouble(d.substring(5, 9)) / 10;
							if (d.substring(9, 10).endsWith("0")) {
								dividendPlanIncrease += Double.parseDouble(d.substring(1, 4));
							} else {
								// 有送股,判断送股是否大于10
								if (d.substring(9, 11).contains(".")) {
									dividendPlanIncrease = Double.parseDouble(d.substring(9, 13))
											+ Double.parseDouble(d.substring(1, 4));
								} else {
									dividendPlanIncrease = Double.parseDouble(d.substring(9, 14))
											+ Double.parseDouble(d.substring(1, 4));
								}
							}
							}
						} else {
							dividendPerShare = 0;
							// 有转增股,没有分红,判断有没有送股
							if (d.substring(6, 7).endsWith("0")) {
								dividendPlanIncrease += Double.parseDouble(d.substring(1, 4));
							} else {
								// 有送股,判断送股是否大于10
								if (d.substring(6, 8).contains(".")) {
									dividendPlanIncrease = Double.parseDouble(d.substring(6, 10))
											+ Double.parseDouble(d.substring(1, 4));
								} else {
									dividendPlanIncrease = Double.parseDouble(d.substring(6, 11))
											+ Double.parseDouble(d.substring(1, 4));
								}
							}
						}
					}
				}
				logger.info("采集第"+count+"个股票股息");
				logger.info("股票代码为:" +code);
				logger.info("采集的报告期为:"+year);
				logger.info("股息为:   " +dividendPerShare);
				logger.info("送转股数为: " +dividendPlanIncrease);
				logger.info("--------------------------------");
				count++;
				String[] year1 = year.split("-");
				String dividendCodeStr = "";
				if (year1[1].endsWith("12")) {
					ArrayList<StockDividends> dividendtab = StockDAO.getStockDividendsCode(Integer.parseInt(year1[0]),
							4);
					for (StockDividends s : dividendtab) {
						dividendCodeStr += s.getCode() + ",";
					} // 判断同期表中是否存在该code ,存在则判断股息是否一致,不一致再做判断
					if (dividendCodeStr.contains(code)) {
						if (all[i + 7].equals("")) {
							if (dividendPerShare == 0) {
								String sql = "update stock_dividends set dividendPerShare=" + 0 + ",dividendPlanFlag="
										+ 2 + ",dividendPlanAbstract='不分配',announDate='" + announDate
										+ "' where `code`='" + code + "' and year=" + year1[0] + " and quarter=4 ";
								StockDAO.runSql(sql);
							} else {
								double perShare=StockDAO.getDividend(code, year).getDividendPerShare();
								if (code.contains("sh")) {
									if (perShare>dividendPerShare) {
										dividendPerShare=perShare;
									}
								}else{
									if (perShare<dividendPerShare) {
										dividendPerShare=perShare;
									}
								}
								String sql = "update stock_dividends set dividendPerShare=" + dividendPerShare
										+ ",dividendPlanFlag=" + 2 + ",dividendPlanAbstract='10派"
										+ df1.format(dividendPerShare * 10) + "元',announDate='" + announDate
										+ "' where `code`='" + code + "' and year=" + year1[0] + " and quarter=4 ";
								StockDAO.runSql(sql);
							}
						} else {
							if (dividendPerShare == 0) {
								String sql = "update stock_dividends set dividendPerShare=" + 0 + ",recordDate='"
										+ reportDay + "',dividendPlanFlag=" + 1
										+ ",dividendPlanAbstract='不分配',announDate='" + announDate + "' where `code`='"
										+ code + "' and year=" + year1[0] + " and quarter=4 ";
								StockDAO.runSql(sql);
							} else {
								double perShare=StockDAO.getDividend(code, year).getDividendPerShare();
								String record=StockDAO.getDividend(code, year).getRecordDate();
								if (code.contains("sh")) {
									if (perShare>dividendPerShare) {
										dividendPerShare=perShare;
										if (!record.endsWith("")) {
											reportDay=record;
										}
									}
								}else{
									if (perShare<dividendPerShare) {
										dividendPerShare=perShare;
										if (!record.endsWith("")) {
											reportDay=record;
										}
									}
								}
								String sql = "update stock_dividends set dividendPerShare=" + dividendPerShare
										+ ",recordDate='" + reportDay + "',dividendPlanFlag=" + 1
										+ ",dividendPlanAbstract='10派" + df1.format(dividendPerShare * 10)
										+ "元',announDate='" + announDate + "' where `code`='" + code + "' and year="
										+ year1[0] + " and quarter=4 ";
								StockDAO.runSql(sql);
							}
						}
						if (dividendPlanIncrease == 0) {
							String sql = "update stock_dividends set dividendIncrease=0,dividendPlanIncrease='不送转' where `code`='" + code
									+ "' and year=" + year1[0] + " and quarter=4 ";
							StockDAO.runSql(sql);
						} else {
							String sql = "update stock_dividends set dividendIncrease=" + dividendPlanIncrease + ",dividendPlanIncrease='10送转"+dividendPlanIncrease+"股' "
									+ "where `code`='" + code + "' and year=" + year1[0] + " and quarter=4 ";
							StockDAO.runSql(sql);
						}
					}
					// 当表中不存在该code,则去stock_company中查看是否存在,存在则讲其新增入库
					else {
						String stocksCodeStr = "";
						HashSet<Stock> stocktab = StockDAO.getStockCode(1, 1);
						for (Stock s : stocktab) {
							stocksCodeStr += s.getCode() + ",";
						}
						if (stocksCodeStr.contains(code)) {
							if (dividendCodeStr.contains(code)) {
								// 当表中出现重复记录时
							} else {
								if (all[i + 7].equals("")) {
									if (dividendPerShare == 0) {
										if (dividendPlanIncrease==0) {
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 4 + ",'" + "" + "','" + executeContent
													+ "'," + 2 + ",'不分配','" + year + "','" + announDate + "','不送转',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}else{
										String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
												+ code + "',(select name from stock_company where code='" + code
												+ "'),'" + year1[0] + "'," + 4 + ",'" + "" + "','" + executeContent
												+ "'," + 2 + ",'不分配','" + year + "','" + announDate + "','10送转"+dividendPlanIncrease+"股',"+dividendPlanIncrease+")";
										StockDAO.runSql(sql);
										}
									} else {
										if (dividendPlanIncrease==0) {
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPerShare,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 4 + ",'" + "" + "'," + dividendPerShare
													+ ",'" + executeContent + "'," + 2 + ",'10派"
													+ df1.format(dividendPerShare * 10) + "元','" + year + "','" + announDate
													+ "','不送转',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}else{
												String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPerShare,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
														+ code + "',(select name from stock_company where code='" + code
														+ "'),'" + year1[0] + "'," + 4 + ",'" + "" + "'," + dividendPerShare
														+ ",'" + executeContent + "'," + 2 + ",'10派"
														+ df1.format(dividendPerShare * 10) + "元','" + year + "','" + announDate
														+ "','10送转"+dividendPlanIncrease+"股',"+dividendPlanIncrease+")";
												StockDAO.runSql(sql);
										}
									}
								} else {
									if (dividendPerShare == 0) {
										if (dividendPlanIncrease==0) {
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 4 + ",'" + reportDay + "','"
													+ executeContent + "'," + 1 + ",'不分配','" + year + "','" + announDate
													+ "','不送转',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}else{
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 4 + ",'" + reportDay + "','"
													+ executeContent + "'," + 1 + ",'不分配','" + year + "','" + announDate
													+ "','10送转"+dividendPlanIncrease+"股',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}
									} else {
										if (dividendPlanIncrease==0) {
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPerShare,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 4 + ",'" + reportDay + "',"
													+ dividendPerShare + ",'" + executeContent + "'," + 1 + ",'10派"
													+ df1.format(dividendPerShare * 10) + "元','" + year + "','" + announDate
													+ "','不送转',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}else{
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPerShare,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 4 + ",'" + reportDay + "',"
													+ dividendPerShare + ",'" + executeContent + "'," + 1 + ",'10派"
													+ df1.format(dividendPerShare * 10) + "元','" + year + "','" + announDate
													+ "','10送转"+dividendPlanIncrease+"股',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}
									}
								}
							}
						}
					}

				} else if (year1[1].endsWith("06")) {
					ArrayList<StockDividends> dividendtab = StockDAO.getStockDividendsCode(Integer.parseInt(year1[0]),
							2);
					for (StockDividends s : dividendtab) {
						dividendCodeStr += s.getCode() + ",";
					} // 判断同期表中是否存在该code ,存在则判断股息是否一致,不一致再做判断
					if (dividendCodeStr.contains(code)) {
						if (all[i + 7].equals("")) {
							if (dividendPerShare == 0) {
								String sql = "update stock_dividends set dividendPerShare=" + 0 + ",dividendPlanFlag="
										+ 2 + ",dividendPlanAbstract='不分配',announDate='" + announDate
										+ "' where `code`='" + code + "' and year=" + year1[0] + " and quarter=2 ";
								StockDAO.runSql(sql);
							} else {
								double perShare=StockDAO.getDividend(code, year).getDividendPerShare();
								if (code.contains("sh")) {
									if (perShare>dividendPerShare) {
										dividendPerShare=perShare;
									}
								}else{
									if (perShare<dividendPerShare) {
										dividendPerShare=perShare;
									}
								}
								String sql = "update stock_dividends set dividendPerShare=" + dividendPerShare
										+ ",dividendPlanFlag=" + 2 + ",dividendPlanAbstract='10派"
										+ df1.format(dividendPerShare * 10) + "元',announDate='" + announDate
										+ "' where `code`='" + code + "' and year=" + year1[0] + " and quarter=2 ";
								StockDAO.runSql(sql);
							}

						} else {
							if (dividendPerShare == 0) {
								String sql = "update stock_dividends set dividendPerShare=" + 0 + ",recordDate='"
										+ reportDay + "',dividendPlanFlag=" + 1
										+ ",dividendPlanAbstract='不分配',announDate='" + announDate + "' where `code`='"
										+ code + "' and year=" + year1[0] + " and quarter=2";
								StockDAO.runSql(sql);
							} else {
								double perShare=StockDAO.getDividend(code, year).getDividendPerShare();
								String record=StockDAO.getDividend(code, year).getRecordDate();
								if (code.contains("sh")) {
									if (perShare>dividendPerShare) {
										dividendPerShare=perShare;
										if (!record.endsWith("")) {
											reportDay=record;
										}
									}
								}else{
									if (perShare<dividendPerShare) {
										dividendPerShare=perShare;
										if (!record.endsWith("")) {
											reportDay=record;
										}
									}
								}
								String sql = "update stock_dividends set dividendPerShare=" + dividendPerShare
										+ ",recordDate='" + reportDay + "',dividendPlanFlag=" + 1
										+ ",dividendPlanAbstract='10派" + df1.format(dividendPerShare * 10)
										+ "元',announDate='" + announDate + "' where `code`='" + code + "' and year="
										+ year1[0] + " and quarter=2";
								StockDAO.runSql(sql);
							}
						}
						if (dividendPlanIncrease == 0) {
							String sql = "update stock_dividends set dividendIncrease=0,dividendPlanIncrease='不送转' where `code`='" + code
									+ "' and year=" + year1[0] + " and quarter=2 ";
							StockDAO.runSql(sql);
						} else {
							String sql = "update stock_dividends set dividendIncrease=" + dividendPlanIncrease + ",dividendPlanIncrease='10送转"+dividendPlanIncrease+"股'"
									+ "where `code`='" + code + "' and year=" + year1[0] + " and quarter=2 ";
							StockDAO.runSql(sql);
						}
					}
					// 当表中不存在该code,则去stock_company中查看是否存在,存在则讲其新增入库
					else {
						String stocksCodeStr = "";
						HashSet<Stock> stocktab = StockDAO.getStockCode(1, 1);
						for (Stock s : stocktab) {
							stocksCodeStr += s.getCode() + ",";
						}
						if (stocksCodeStr.contains(code)) {
							if (dividendCodeStr.contains(code)) {
								// 当表中出现重复记录时

							} else {
								if (all[i + 7].equals("")) {
									if (dividendPerShare == 0) {
										if (dividendPlanIncrease==0) {
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 2 + ",'" + "" + "','" + executeContent
													+ "'," + 2 + ",'不分配','" + year + "','" + announDate + "','不送转',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}else{
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 2 + ",'" + "" + "','" + executeContent
													+ "'," + 2 + ",'不分配','" + year + "','" + announDate + "','10送转"+dividendPlanIncrease+"股',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}
									} else {
										if (dividendPlanIncrease==0) {
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPerShare,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 2 + "," + dividendPerShare + ",'"
													+ executeContent + "'," + 2 + ",'10派"
													+ df1.format(dividendPerShare * 10) + "元','" + year + "','" + announDate
													+ "','不送转',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}else{
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPerShare,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 2 + "," + dividendPerShare + ",'"
													+ executeContent + "'," + 2 + ",'10派"
													+ df1.format(dividendPerShare * 10) + "元','" + year + "','" + announDate
													+ "','10送转"+dividendPlanIncrease+"股',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}
									}
								} else {
									if (dividendPerShare == 0) {
										if (dividendPlanIncrease==0) {
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 2 + ",'" + "" + "','" + reportDay + "','"
													+ executeContent + "'," + 1 + ",'不分配','" + year + "','" + announDate
													+ "','不送转',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}else{
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 2 + ",'" + "" + "','" + reportDay + "','"
													+ executeContent + "'," + 1 + ",'不分配','" + year + "','" + announDate
													+ "','10送转"+dividendPlanIncrease+"股',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}
									} else {
										if (dividendPlanIncrease==0) {
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPerShare,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 2 + ",'" + reportDay + "',"
													+ dividendPerShare + ",'" + executeContent + "'," + 1 + ",'10派"
													+ df1.format(dividendPerShare * 10) + "元','" + year + "','" + announDate
													+ "','不送转',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}else{
											String sql = "insert into stock_dividends(code,name,year,quarter,recordDate,dividendPerShare,dividendPlan,dividendPlanFlag,dividendPlanAbstract,reportDate,announDate,dividendPlanIncrease,dividendIncrease) values('"
													+ code + "',(select name from stock_company where code='" + code
													+ "'),'" + year1[0] + "'," + 2 + ",'" + reportDay + "',"
													+ dividendPerShare + ",'" + executeContent + "'," + 1 + ",'10派"
													+ df1.format(dividendPerShare * 10) + "元','" + year + "','" + announDate
													+ "','10送转"+dividendPlanIncrease+"股',"+dividendPlanIncrease+")";
											StockDAO.runSql(sql);
										}
									}
								}
							}
						}
					}
				}
			}
		}catch (Exception ex) {
           ex.printStackTrace();
		}
		return dividends;
	}
}
